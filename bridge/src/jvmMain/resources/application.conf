# Default config

ktor {
  deployment {
    port = ${LISTEN_PORT}
    host = ${LISTEN_HOST}

    homeserverUrl = ${HS_URL}
    hsToken = ${HS_TOKEN}
    asToken = ${AS_TOKEN}

    database {
      host = ${DATABASE_HOST}
      port = ${DATABASE_PORT}
      database = ${DATABASE}
      username = ${DATABASE_USERNAME}
      password = ${DATABASE_PASSWORD}
      pool {
        connectionIdleTimeMs = ${?CONNECTION_IDLE_TIME_MS}
        maxSize = ${?POOL_MAX_SIZE}
      }
    }
  }
  application {
    modules = [
      ru.herobrine1st.matrix.bridge.telegram.module.LoggingModuleKt.loggingModule
      ru.herobrine1st.matrix.bridge.telegram.module.TrixnityModuleKt.trixnityModule
    ]
  }
}

bridge {
  # Domain that is associated with your homeserver
  # You can extract it from your mxid: the server name for @user:example.org is example.org
  homeserverDomain = ${HS_NAME}
  # The same as "sender_localpart" in registration file
  botLocalpart = ${BOT_LOCALPART}
  # Username prefix for puppets created by this bridge
  puppetPrefix = ${PUPPET_PREFIX}
  roomAliasPrefix = ${ROOM_ALIAS_PREFIX}

  # TODO admin mxid?

  # Regexes for Matrix IDs allowed/denied to use the bridge
  # Blacklist is first. Both may be empty.
  provisioning {
    whitelist = [
      # Allow a specific user
      #"@user:server\\.com"
      # Allow users on a specific homeserver
      #"@.*:yourserver\\.com"
      # Allow anyone
      #".*"
    ]
    blacklist = [
      # Disallow a specific user
      #"@user:server\\.com"
      # Disallow users on a specific homeserver
      #"@.*:yourserver\\.com"
    ]
  }

  presence {
    # Enable remote online/offline status -> matrix
    remote: false
    # Enable matrix online/offline status -> remote
    local: false
  }
}

telegram {
  actors = [
//    {
//      id = 0
//      token = ""
//      admin = "@example:example.com"
//    }
  ]
}